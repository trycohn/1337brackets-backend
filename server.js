// server.js

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
require('dotenv').config({ path: __dirname + '/.env' });

// –õ–æ–≥–∏—Ä—É–µ–º JWT_SECRET –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
console.log("üîç –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π JWT_SECRET:", process.env.JWT_SECRET);

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
const express = require('express');
const cors = require('cors');
const pool = require('./db');
const http = require('http');
const { initializeSocket } = require('./notifications');
const tournamentsRouter = require('./routes/tournaments');

// –°–æ–∑–¥–∞—ë–º Express-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
const app = express();

// –°–æ–∑–¥–∞—ë–º HTTP-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ Express-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const server = http.createServer(app);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Socket.IO —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å notifications
initializeSocket(server);

// Middleware –¥–ª—è Express
app.use(express.json());
app.use(cors({
  origin: process.env.NODE_ENV === 'production'
    ? 'https://1337brackets-frontend.vercel.app'
    : ['http://localhost:3001', 'http://127.0.0.1:5500'],
  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
  credentials: true,
}));

// –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
app.get('/testdb', async (req, res) => {
  try {
    const result = await pool.query('SELECT NOW()');
    res.json({ status: 'success', time: result.rows[0].now });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ:', err);
    res.status(500).json({ status: 'error', message: err.message });
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ /favicon.ico –∏ /favicon.png
app.get('/favicon.ico', (req, res) => {
  res.status(204).end(); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç (No Content)
});

app.get('/favicon.png', (req, res) => {
  res.status(204).end(); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç (No Content)
});

// API-–º–∞—Ä—à—Ä—É—Ç—ã
app.use('/api/users', require('./routes/users'));
app.use('/api/tournaments', tournamentsRouter);
app.use('/api/teams', require('./routes/teams'));
app.use('/api/tournamentPlayers', require('./routes/tournamentPlayers'));
app.use('/api/matches', require('./routes/matches'));
app.use('/api/statistics', require('./routes/statistics'));
app.use('/api/notifications', require('./routes/notifications'));

// –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ 404 –¥–ª—è /api (–ø–æ—Å–ª–µ –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤)
app.use('/api', (req, res) => {
  console.log(`404 –¥–ª—è –ø—É—Ç–∏: ${req.path}`);
  res.status(404).json({ error: 'API –º–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
});

// –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ 404 –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π
app.use((req, res) => {
  console.log(`404 –¥–ª—è –ø—É—Ç–∏: ${req.path}`);
  res.status(404).json({ error: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
server.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  try {
    await pool.query('SELECT NOW()');
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err.message);
  }
});